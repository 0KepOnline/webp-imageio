import org.gradle.api.artifacts.maven.MavenDeployment

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'maven-publish'

group = 'org.sejda.imageio'
version       = "0.1.2"
ext.packaging = 'jar'

dependencies {
    testCompile 'junit:junit:4.13'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/javase/java'
        }
        resources {
            srcDir 'src/javase/resources'
        }
    }

    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'org.sejda.imageio'
            artifactId 'imageio-webp'
            version '0.1.2'

            from components.java
        }
    }
}


uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                // Uncomment when publishing to Maven Central
                // authentication(userName: "sejda", password: "")
            }

            pom.project {
                name 'imageio-webp'
                packaging 'jar'
                description 'WebP support for Java ImageIO'
                url 'https://github.com/sejda-pdf/webp-imageio'

                scm {
                    url 'scm:git@github.com:sejda-pdf/webp-imageio.git'
                    connection 'scm:git@github.com:sejda-pdf/webp-imageio.git'
                    developerConnection 'scm:git@github.com:sejda-pdf/webp-imageio.git'
                }

                licenses {
                    license {
                        name 'Apache 2.0 License'
                        url 'https://www.apache.org/licenses/LICENSE-2.0.html'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'ediweissmann'
                        name 'Edi Weissmann'
                    }
                }
            }
        }
    }
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

test {
    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}
